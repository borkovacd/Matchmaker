{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Lilly021\\\\GIT\\\\Matchmaker\\\\matchmaker\\\\src\\\\components\\\\controls\\\\CheckGroup.js\";\nimport React from \"react\";\nimport BaseControl from \"./BaseControl\";\nimport { bindActionCreators } from \"redux\";\nimport * as Actions from \"../../actions/Actions\";\nimport { withRouter } from \"react-router-dom\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass CheckGroup extends BaseControl {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: props.items ? props.items : [],\n      selectedItems: props.selectedItems ? props.selectedItems : [],\n      displayKey: props.displayKey,\n      valueKey: props.valueKey,\n      onlyOne: props.onlyOne\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.state.selectedItems = nextProps.selectedItems ? nextProps.selectedItems : [];\n    this.state.items = nextProps.items ? nextProps.items : [];\n  }\n\n  isItemSelected(item) {\n    for (let listItem of this.state.selectedItems) {\n      if (item[this.state.valueKey] == listItem[this.state.valueKey]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  selectItem(item) {\n    let result = this.state.selectedItems;\n    let index = result.indexOf(item);\n\n    if (index === -1) {\n      if (this.state.onlyOne) {\n        result = [];\n      }\n\n      result.push(item);\n    } else {\n      if (!this.state.onlyOne) {\n        result.splice(index, 1);\n      }\n    }\n\n    let eventResult;\n\n    if (result.length === 1) {\n      eventResult = result[0][this.state.valueKey];\n    }\n\n    this.createEvent(eventResult);\n    this.setState({\n      selectedItems: result\n    });\n  }\n\n  renderOptions() {\n    let result = [];\n\n    for (let item of this.state.items) {\n      result.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: \"check-group-item-\" + result.length,\n        className: \"item\",\n        onClick: () => this.selectItem(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: this.isItemSelected(item) ? \"active\" : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, item[this.state.displayKey])));\n    }\n\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"check-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }, this.renderOptions());\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setFilterData: Actions.setData\n  }, dispatch);\n}\n\nfunction mapStateToProps({\n  siteDataReducers\n}) {\n  return {\n    sideData: siteDataReducers\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CheckGroup));","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/src/components/controls/CheckGroup.js"],"names":["React","BaseControl","bindActionCreators","Actions","withRouter","connect","CheckGroup","constructor","props","state","items","selectedItems","displayKey","valueKey","onlyOne","componentWillReceiveProps","nextProps","isItemSelected","item","listItem","selectItem","result","index","indexOf","push","splice","eventResult","length","createEvent","setState","renderOptions","render","mapDispatchToProps","dispatch","setFilterData","setData","mapStateToProps","siteDataReducers","sideData"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BaseControl from \"./BaseControl\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as Actions from \"../../actions/Actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nclass CheckGroup extends BaseControl {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.items ? props.items : [],\r\n      selectedItems: props.selectedItems ? props.selectedItems : [],\r\n      displayKey: props.displayKey,\r\n      valueKey: props.valueKey,\r\n      onlyOne: props.onlyOne\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.state.selectedItems = nextProps.selectedItems\r\n      ? nextProps.selectedItems\r\n      : [];\r\n    this.state.items = nextProps.items ? nextProps.items : [];\r\n  }\r\n\r\n  isItemSelected(item) {\r\n    for (let listItem of this.state.selectedItems) {\r\n      if (item[this.state.valueKey] == listItem[this.state.valueKey]) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  selectItem(item) {\r\n    let result = this.state.selectedItems;\r\n\r\n    let index = result.indexOf(item);\r\n\r\n    if (index === -1) {\r\n      if (this.state.onlyOne) {\r\n        result = [];\r\n      }\r\n\r\n      result.push(item);\r\n    } else {\r\n      if (!this.state.onlyOne) {\r\n        result.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    let eventResult;\r\n\r\n    if (result.length === 1) {\r\n      eventResult = result[0][this.state.valueKey];\r\n    }\r\n\r\n    this.createEvent(eventResult);\r\n\r\n    this.setState({\r\n      selectedItems: result\r\n    });\r\n  }\r\n\r\n  renderOptions() {\r\n    let result = [];\r\n\r\n    for (let item of this.state.items) {\r\n      result.push(\r\n        <div\r\n          key={\"check-group-item-\" + result.length}\r\n          className=\"item\"\r\n          onClick={() => this.selectItem(item)}\r\n        >\r\n          <span className={this.isItemSelected(item) ? \"active\" : \"\"}></span>\r\n          <p>{item[this.state.displayKey]}</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"check-group\">{this.renderOptions()}</div>;\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(\r\n    {\r\n      setFilterData: Actions.setData\r\n    },\r\n    dispatch\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ siteDataReducers }) {\r\n  return { sideData: siteDataReducers };\r\n}\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapDispatchToProps)(CheckGroup)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}