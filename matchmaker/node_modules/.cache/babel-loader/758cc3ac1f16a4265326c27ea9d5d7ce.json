{"ast":null,"code":"var _jsxFileName = \"/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/common/FormComponent.js\";\nimport React, { Component } from \"react\";\nimport { validate, isFormValid } from \"../functions/Validation\";\nimport BaseComponent from \"../common/BaseComponent\";\nimport update from \"immutability-helper\";\nimport Slider from \"rc-slider\";\nimport Range from \"rc-slider\";\nconst Handle = Range.Handle;\n\nclass FormComponent extends BaseComponent {\n  constructor(_props) {\n    super(_props);\n    this.validationList = {};\n\n    this.handle = props => {\n      const {\n        value,\n        dragging,\n        index,\n        ...restProps\n      } = props;\n      return /*#__PURE__*/React.createElement(Handle, Object.assign({\n        value: value,\n        key: index\n      }, restProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, value));\n    };\n\n    this.state = {\n      data: {},\n      errors: {}\n    };\n    this.changeData = this.changeData.bind(this);\n    this.changeGroupCheckBox = this.changeGroupCheckBox.bind(this);\n    this.changeCheckBox = this.changeCheckBox.bind(this);\n    this.rangeChange = this.rangeChange.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  changeData(event) {\n    console.log(\"THIS -> \" + event.target.name + \" -> \" + event.target.value);\n    this.setState({\n      data: update(this.state.data, {\n        [event.target.name]: {\n          $set: event.target.value\n        }\n      })\n    });\n  }\n\n  changeGroupCheckBox(event) {\n    this.setState({\n      data: update(this.state.data, {\n        [event.target.name]: {\n          $set: event.target.value\n        }\n      })\n    });\n  }\n\n  changeCheckBox(event) {\n    const field = event.target.name;\n    const data = this.state.data;\n    data[field] = !data[field];\n    this.setState({\n      data\n    });\n  }\n\n  rangeChange(event, name) {\n    let data = this.state.data;\n\n    if (event[0] > event[1] || event[1] < event[0]) {\n      return;\n    }\n\n    data[name + \"Min\"] = event[0];\n    data[name + \"Max\"] = event[1];\n    this.setState({\n      data: data\n    });\n  }\n\n  isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  isFloat(n) {\n    return !isNaN(parseFloat(n));\n  }\n\n  isInt(n) {\n    return isFinite(n);\n  }\n\n  validate() {\n    let errors = validate(this.state.data, this.validationList);\n    this.setState({\n      errors\n    });\n    return isFormValid(errors);\n  }\n\n  setError(key, value) {\n    this.setState({\n      errors: update(this.state.errors, {\n        [key]: {\n          $set: [{\n            message: value\n          }]\n        }\n      })\n    });\n  }\n\n}\n\nexport default FormComponent;","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/common/FormComponent.js"],"names":["React","Component","validate","isFormValid","BaseComponent","update","Slider","Range","Handle","FormComponent","constructor","props","validationList","handle","value","dragging","index","restProps","state","data","errors","changeData","bind","changeGroupCheckBox","changeCheckBox","rangeChange","event","console","log","target","name","setState","$set","field","isNumeric","n","isNaN","parseFloat","isFinite","isFloat","isInt","setError","key","message"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { validate, isFormValid } from \"../functions/Validation\";\nimport BaseComponent from \"../common/BaseComponent\";\nimport update from \"immutability-helper\";\nimport Slider from \"rc-slider\";\nimport Range from \"rc-slider\";\n\nconst Handle = Range.Handle;\n\nclass FormComponent extends BaseComponent {\n  validationList = {};\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {},\n      errors: {}\n    };\n\n    this.changeData = this.changeData.bind(this);\n    this.changeGroupCheckBox = this.changeGroupCheckBox.bind(this);\n    this.changeCheckBox = this.changeCheckBox.bind(this);\n    this.rangeChange = this.rangeChange.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  changeData(event) {\n    console.log(\"THIS -> \" + event.target.name + \" -> \" + event.target.value);\n    this.setState({\n      data: update(this.state.data, {\n        [event.target.name]: { $set: event.target.value }\n      })\n    });\n  }\n\n  changeGroupCheckBox(event) {\n    this.setState({\n      data: update(this.state.data, {\n        [event.target.name]: { $set: event.target.value }\n      })\n    });\n  }\n\n  changeCheckBox(event) {\n    const field = event.target.name;\n    const data = this.state.data;\n    data[field] = !data[field];\n\n    this.setState({\n      data\n    });\n  }\n\n  handle = props => {\n    const { value, dragging, index, ...restProps } = props;\n\n    return (\n      <Handle value={value} key={index} {...restProps}>\n        <span>{value}</span>\n      </Handle>\n    );\n  };\n\n  rangeChange(event, name) {\n    let data = this.state.data;\n\n    if (event[0] > event[1] || event[1] < event[0]) {\n      return;\n    }\n\n    data[name + \"Min\"] = event[0];\n    data[name + \"Max\"] = event[1];\n\n    this.setState({\n      data: data\n    });\n  }\n\n  isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n\n  isFloat(n) {\n    return !isNaN(parseFloat(n));\n  }\n\n  isInt(n) {\n    return isFinite(n);\n  }\n\n  validate() {\n    let errors = validate(this.state.data, this.validationList);\n\n    this.setState({ errors });\n\n    return isFormValid(errors);\n  }\n\n  setError(key, value) {\n    this.setState({\n      errors: update(this.state.errors, {\n        [key]: { $set: [{ message: value }] }\n      })\n    });\n  }\n}\n\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}