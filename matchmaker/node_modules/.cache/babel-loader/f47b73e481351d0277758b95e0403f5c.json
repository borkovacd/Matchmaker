{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Lilly021\\\\GIT\\\\Matchmaker\\\\matchmaker\\\\src\\\\components\\\\ErrorViewer.js\";\nimport React, { Component } from 'react';\n\nclass ErrorViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: props.errors,\n      type: props.type\n    };\n  }\n\n  getErrors() {\n    let result = [];\n    let errors = this.props.errors[this.props.type];\n\n    for (let i = 0; i < errors.length; i++) {\n      result.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: 'error- ' + this.props.type + '-' + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, errors[i].message));\n    }\n\n    return result;\n  }\n\n  render() {\n    return this.props.errors[this.props.type] ? this.props.errors[this.props.type].map(error => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"error-container\",\n        key: 'error- container-' + this.props.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, this.getErrors());\n    }) : '';\n  }\n\n}\n\nexport default ErrorViewer;","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/src/components/ErrorViewer.js"],"names":["React","Component","ErrorViewer","constructor","props","state","errors","type","getErrors","result","i","length","push","message","render","map","error"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADL;AAETC,MAAAA,IAAI,EAAEH,KAAK,CAACG;AAFH,KAAb;AAIH;;AAEDC,EAAAA,SAAS,GAAG;AAER,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIH,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,CAAb;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCD,MAAAA,MAAM,CAACG,IAAP,eACI;AAAI,QAAA,GAAG,EAAG,YAAY,KAAKR,KAAL,CAAWG,IAAvB,GAA8B,GAA9B,GAAoCG,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoDJ,MAAM,CAACI,CAAD,CAAN,CAAUG,OAA9D,CADJ;AAGH;;AAED,WAAOJ,MAAP;AACH;;AAEDK,EAAAA,MAAM,GAAI;AAEN,WAAO,KAAKV,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,IAAqC,KAAKH,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,EAAmCQ,GAAnC,CAAwCC,KAAD,IAAU;AACzF,0BAEI;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAgC,QAAA,GAAG,EAAG,sBAAsB,KAAKZ,KAAL,CAAWG,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKC,SAAL,EADN,CAFJ;AAMH,KAP2C,CAArC,GAOF,EAPL;AAQH;;AAlC+B;;AAqCpC,eAAeN,WAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass ErrorViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: props.errors,\r\n            type: props.type\r\n        };\r\n    }\r\n\r\n    getErrors() {\r\n\r\n        let result = [];\r\n        let errors = this.props.errors[this.props.type];\r\n\r\n        for (let i = 0; i < errors.length; i++) {\r\n            result.push(\r\n                <li key={ 'error- ' + this.props.type + '-' + i } >{errors[i].message}</li>\r\n            )\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render () {\r\n\r\n        return this.props.errors[this.props.type] ? this.props.errors[this.props.type].map((error) =>{\r\n            return (\r\n\r\n                <ul className='error-container' key={ 'error- container-' + this.props.type }>\r\n                    { this.getErrors() }\r\n                </ul>\r\n            )\r\n        }) : '';\r\n    }\r\n}\r\n\r\nexport default ErrorViewer;"]},"metadata":{},"sourceType":"module"}