{"ast":null,"code":"import CONFIG from \"../config\";\nimport HttpMethod from \"../constants/HttpMethod\";\nimport { request } from \"./HTTP\";\nimport history from \"../history\";\nimport { OK } from \"http-status-codes\";\nexport async function login(username, password) {\n  clearUserData(); // --- Never Used ---\n\n  /*let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: \"password\",\n    username: username,\n    password: password\n  };*/\n\n  let response = {\n    status: OK,\n    data: {\n      user: {\n        username: \"borkovac\",\n        email: \"borkovac.dragan@gmail.com\"\n      },\n      access_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.zS8VfSEv7h7nNVSkNhDIE783bVJTgPP9JlOHSDaIy1I\",\n      refresh_token: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.makKgC-n7pxiletqYhN77RKRvoS_9V7p9Y45dGjZrEY\"\n    }\n  }; //return await request(\"/oauth/v2/token\", data, HttpMethod.GET, false).then(\n  //response => {\n  //if (!response.ok) {\n  //  return response;\n  //}\n\n  setTokenToLocalStorage(response.data.access_token, response.data.refresh_token); //return request(\"/user/current\").then(response => {\n\n  if (response.data.user) {\n    setUserToLocalStorage(response.data.user);\n  }\n\n  return response; //});\n}\nexport async function socialLogin(provider, email, firstName, lastName, socialId, accessToken, expiresAt) {\n  let data = {\n    provider: provider,\n    email: email,\n    firstName: firstName ? firstName : \"\",\n    lastName: lastName ? lastName : \"\",\n    socialId: socialId,\n    accessToken: accessToken,\n    expiresAt: expiresAt\n  };\n  return await request(\"/social/authenticate\", data, HttpMethod.POST).then(response => {\n    if (!response.ok) {\n      return;\n    }\n\n    setSocialTokenToLocalStorage(response.data.access_token);\n    return request(\"/user/current\").then(response => {\n      if (response.data.user) {\n        setUserToLocalStorage(response.data.user);\n      }\n\n      return response;\n    });\n  });\n}\nexport async function refreshToken(refreshToken) {\n  let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: \"refresh_token\",\n    refresh_token: refreshToken\n  };\n  return await request(\"/oauth/v2/token\", data, HttpMethod.GET, false).then(data => {\n    setTokenToLocalStorage(data.access_token, data.refresh_token);\n    return data.access_token !== undefined;\n  });\n}\nexport function logout() {\n  clearUserData();\n  history.push(\"/\");\n}\nexport function setUserToLocalStorage(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\nexport function getUserFromLocalStorage() {\n  let user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n}\nexport function setTokenToLocalStorage(access_token, refresh_token) {\n  localStorage.setItem(CONFIG.tokenKey, access_token);\n  localStorage.setItem(CONFIG.refreshTokenKey, refresh_token);\n}\nexport function setSocialTokenToLocalStorage(access_token) {\n  localStorage.setItem(CONFIG.socialTokenKey, access_token);\n}\nexport function clearUserData() {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(CONFIG.tokenKey);\n  localStorage.removeItem(CONFIG.refreshTokenKey);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(CONFIG.refreshTokenKey);\n}\nexport function isUserLoggedIn() {\n  return getUserFromLocalStorage() != null;\n}","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/base/OAuth.js"],"names":["CONFIG","HttpMethod","request","history","OK","login","username","password","clearUserData","response","status","data","user","email","access_token","refresh_token","setTokenToLocalStorage","setUserToLocalStorage","socialLogin","provider","firstName","lastName","socialId","accessToken","expiresAt","POST","then","ok","setSocialTokenToLocalStorage","refreshToken","client_id","clientId","client_secret","clientSecret","grant_type","GET","undefined","logout","push","localStorage","setItem","JSON","stringify","getUserFromLocalStorage","getItem","parse","tokenKey","refreshTokenKey","socialTokenKey","removeItem","getRefreshToken","isUserLoggedIn"],"mappings":"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","sourcesContent":["import CONFIG from \"../config\";\nimport HttpMethod from \"../constants/HttpMethod\";\nimport { request } from \"./HTTP\";\nimport history from \"../history\";\nimport { OK } from \"http-status-codes\";\n\nexport async function login(username, password) {\n  clearUserData();\n\n  // --- Never Used ---\n  /*let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: \"password\",\n    username: username,\n    password: password\n  };*/\n\n  let response = {\n    status: OK,\n    data: {\n      user: {\n        username: \"borkovac\",\n        email: \"borkovac.dragan@gmail.com\"\n      },\n      access_token:\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.zS8VfSEv7h7nNVSkNhDIE783bVJTgPP9JlOHSDaIy1I\",\n      refresh_token:\n        \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.makKgC-n7pxiletqYhN77RKRvoS_9V7p9Y45dGjZrEY\"\n    }\n  };\n\n  //return await request(\"/oauth/v2/token\", data, HttpMethod.GET, false).then(\n  //response => {\n  //if (!response.ok) {\n  //  return response;\n  //}\n\n  setTokenToLocalStorage(\n    response.data.access_token,\n    response.data.refresh_token\n  );\n\n  //return request(\"/user/current\").then(response => {\n  if (response.data.user) {\n    setUserToLocalStorage(response.data.user);\n  }\n\n  return response;\n  //});\n}\n\nexport async function socialLogin(\n  provider,\n  email,\n  firstName,\n  lastName,\n  socialId,\n  accessToken,\n  expiresAt\n) {\n  let data = {\n    provider: provider,\n    email: email,\n    firstName: firstName ? firstName : \"\",\n    lastName: lastName ? lastName : \"\",\n    socialId: socialId,\n    accessToken: accessToken,\n    expiresAt: expiresAt\n  };\n\n  return await request(\"/social/authenticate\", data, HttpMethod.POST).then(\n    response => {\n      if (!response.ok) {\n        return;\n      }\n\n      setSocialTokenToLocalStorage(response.data.access_token);\n\n      return request(\"/user/current\").then(response => {\n        if (response.data.user) {\n          setUserToLocalStorage(response.data.user);\n        }\n\n        return response;\n      });\n    }\n  );\n}\n\nexport async function refreshToken(refreshToken) {\n  let data = {\n    client_id: CONFIG.clientId,\n    client_secret: CONFIG.clientSecret,\n    grant_type: \"refresh_token\",\n    refresh_token: refreshToken\n  };\n\n  return await request(\"/oauth/v2/token\", data, HttpMethod.GET, false).then(\n    data => {\n      setTokenToLocalStorage(data.access_token, data.refresh_token);\n\n      return data.access_token !== undefined;\n    }\n  );\n}\n\nexport function logout() {\n  clearUserData();\n  history.push(\"/\");\n}\n\nexport function setUserToLocalStorage(user) {\n  localStorage.setItem(\"user\", JSON.stringify(user));\n}\n\nexport function getUserFromLocalStorage() {\n  let user = localStorage.getItem(\"user\");\n  return user ? JSON.parse(user) : null;\n}\n\nexport function setTokenToLocalStorage(access_token, refresh_token) {\n  localStorage.setItem(CONFIG.tokenKey, access_token);\n  localStorage.setItem(CONFIG.refreshTokenKey, refresh_token);\n}\n\nexport function setSocialTokenToLocalStorage(access_token) {\n  localStorage.setItem(CONFIG.socialTokenKey, access_token);\n}\n\nexport function clearUserData() {\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(CONFIG.tokenKey);\n  localStorage.removeItem(CONFIG.refreshTokenKey);\n}\n\nexport function getRefreshToken() {\n  return localStorage.getItem(CONFIG.refreshTokenKey);\n}\n\nexport function isUserLoggedIn() {\n  return getUserFromLocalStorage() != null;\n}\n"]},"metadata":{},"sourceType":"module"}