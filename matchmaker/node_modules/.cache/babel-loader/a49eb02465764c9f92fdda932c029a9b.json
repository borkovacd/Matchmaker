{"ast":null,"code":"import _regeneratorRuntime from\"/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";//import { request } from \"../base/HTTP\";\nimport{OK}from\"http-status-codes\";import{getAllUsers}from\"./UserService\";export function searchUsers(_x){return _searchUsers.apply(this,arguments);}function _searchUsers(){_searchUsers=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var users,result,page,perPage,total,startIndex,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://return await request(\"/search\", data);\nusers=getAllUsers();result=[];page=data.page;perPage=data.perPage;total=users.length;startIndex=(page-1)*perPage;for(i=startIndex;i<total;i++){if(result.length<perPage){result.push(users[i]);}}return _context.abrupt(\"return\",{data:result,total:total,status:OK});case 8:case\"end\":return _context.stop();}}},_callee);}));return _searchUsers.apply(this,arguments);}","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/services/SearchService.js"],"names":["OK","getAllUsers","searchUsers","data","users","result","page","perPage","total","length","startIndex","i","push","status"],"mappings":"iYAAA;AACA,OAASA,EAAT,KAAmB,mBAAnB,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA,eAAsBC,CAAAA,WAAtB,gD,6FAAO,iBAA2BC,IAA3B,mKACL;AAEIC,KAHC,CAGOH,WAAW,EAHlB,CAIDI,MAJC,CAIQ,EAJR,CAKDC,IALC,CAKMH,IAAI,CAACG,IALX,CAMDC,OANC,CAMSJ,IAAI,CAACI,OANd,CAODC,KAPC,CAOOJ,KAAK,CAACK,MAPb,CASDC,UATC,CASY,CAACJ,IAAI,CAAG,CAAR,EAAaC,OATzB,CAUL,IAASI,CAAT,CAAaD,UAAb,CAAyBC,CAAC,CAAGH,KAA7B,CAAoCG,CAAC,EAArC,CAAyC,CACvC,GAAIN,MAAM,CAACI,MAAP,CAAgBF,OAApB,CAA6B,CAC3BF,MAAM,CAACO,IAAP,CAAYR,KAAK,CAACO,CAAD,CAAjB,EACD,CACF,CAdI,gCAgBE,CACLR,IAAI,CAAEE,MADD,CAELG,KAAK,CAAEA,KAFF,CAGLK,MAAM,CAAEb,EAHH,CAhBF,wD","sourcesContent":["//import { request } from \"../base/HTTP\";\nimport { OK } from \"http-status-codes\";\nimport { getAllUsers } from \"./UserService\";\n\nexport async function searchUsers(data) {\n  //return await request(\"/search\", data);\n\n  let users = getAllUsers();\n  let result = [];\n  let page = data.page;\n  let perPage = data.perPage;\n  let total = users.length;\n\n  let startIndex = (page - 1) * perPage;\n  for (let i = startIndex; i < total; i++) {\n    if (result.length < perPage) {\n      result.push(users[i]);\n    }\n  }\n\n  return {\n    data: result,\n    total: total,\n    status: OK,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}