{"ast":null,"code":"import { Component } from \"react\";\nimport { getUserFromLocalStorage, logout } from \"../base/OAuth\";\n\nclass BaseComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.logout = this.logout.bind(this);\n  }\n\n  isUserLoggedIn() {\n    return getUserFromLocalStorage() != null;\n  }\n\n  getUser() {\n    return getUserFromLocalStorage();\n  }\n\n  logout() {\n    logout();\n    this.props.logout();\n  }\n\n  removeFromArray(array, item) {\n    let index = array.indexOf(item);\n\n    if (index == -1) {\n      return false;\n    }\n\n    array.splice(index, 1);\n    return true;\n  }\n\n  isInArray(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n\n  isUserAdmin() {\n    if (!this.props.user) {\n      return false;\n    }\n\n    return this.isUserRole(this.props.user, \"ROLE_ADMIN\");\n  }\n\n  isUserRole(user, role) {\n    for (let userRole of user.roles) {\n      if (userRole === role) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport default BaseComponent;","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/common/BaseComponent.js"],"names":["Component","getUserFromLocalStorage","logout","BaseComponent","constructor","props","bind","isUserLoggedIn","getUser","removeFromArray","array","item","index","indexOf","splice","isInArray","isUserAdmin","user","isUserRole","role","userRole","roles"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,EAAkCC,MAAlC,QAAgD,eAAhD;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKH,MAAL,GAAc,KAAKA,MAAL,CAAYI,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDC,EAAAA,cAAc,GAAG;AACf,WAAON,uBAAuB,MAAM,IAApC;AACD;;AAEDO,EAAAA,OAAO,GAAG;AACR,WAAOP,uBAAuB,EAA9B;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPA,IAAAA,MAAM;AACN,SAAKG,KAAL,CAAWH,MAAX;AACD;;AAEDO,EAAAA,eAAe,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC3B,QAAIC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcF,IAAd,CAAZ;;AAEA,QAAIC,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,aAAO,KAAP;AACD;;AAEDF,IAAAA,KAAK,CAACI,MAAN,CAAaF,KAAb,EAAoB,CAApB;AAEA,WAAO,IAAP;AACD;;AAEDG,EAAAA,SAAS,CAACL,KAAD,EAAQC,IAAR,EAAc;AACrB,WAAOD,KAAK,CAACG,OAAN,CAAcF,IAAd,MAAwB,CAAC,CAAhC;AACD;;AAEDK,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKX,KAAL,CAAWY,IAAhB,EAAsB;AACpB,aAAO,KAAP;AACD;;AAED,WAAO,KAAKC,UAAL,CAAgB,KAAKb,KAAL,CAAWY,IAA3B,EAAiC,YAAjC,CAAP;AACD;;AAEDC,EAAAA,UAAU,CAACD,IAAD,EAAOE,IAAP,EAAa;AACrB,SAAK,IAAIC,QAAT,IAAqBH,IAAI,CAACI,KAA1B,EAAiC;AAC/B,UAAID,QAAQ,KAAKD,IAAjB,EAAuB;AACrB,eAAO,IAAP;AACD;AACF;;AAED,WAAO,KAAP;AACD;;AApDmC;;AAuDtC,eAAehB,aAAf","sourcesContent":["import { Component } from \"react\";\nimport { getUserFromLocalStorage, logout } from \"../base/OAuth\";\n\nclass BaseComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  isUserLoggedIn() {\n    return getUserFromLocalStorage() != null;\n  }\n\n  getUser() {\n    return getUserFromLocalStorage();\n  }\n\n  logout() {\n    logout();\n    this.props.logout();\n  }\n\n  removeFromArray(array, item) {\n    let index = array.indexOf(item);\n\n    if (index == -1) {\n      return false;\n    }\n\n    array.splice(index, 1);\n\n    return true;\n  }\n\n  isInArray(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n\n  isUserAdmin() {\n    if (!this.props.user) {\n      return false;\n    }\n\n    return this.isUserRole(this.props.user, \"ROLE_ADMIN\");\n  }\n\n  isUserRole(user, role) {\n    for (let userRole of user.roles) {\n      if (userRole === role) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n}\n\nexport default BaseComponent;\n"]},"metadata":{},"sourceType":"module"}