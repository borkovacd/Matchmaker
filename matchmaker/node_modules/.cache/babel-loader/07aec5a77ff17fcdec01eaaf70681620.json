{"ast":null,"code":"import { getMonthString } from \"../constants/Month\";\nimport moment from \"moment\";\nexport function getYears(plusYears = 0) {\n  let result = [];\n  let currentYear = new Date().getFullYear();\n  currentYear += plusYears;\n\n  for (let i = currentYear; i >= currentYear - 99; i--) {\n    result.push({\n      name: i,\n      value: i\n    });\n  }\n\n  return result;\n}\nexport function getYearObject(year) {\n  return {\n    name: year,\n    value: year\n  };\n}\nexport function leapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function getDateRangeString(monthFrom, yearFrom, monthTo = undefined, yearTo = undefined) {\n  let result = getMonthString(monthFrom) + \" \" + yearFrom;\n\n  if (monthTo && yearTo) {\n    result += \" - \" + getMonthString(monthTo) + \" \" + yearTo;\n  }\n\n  return result;\n}\nexport function stringToDate(date) {\n  return moment(date, \"YYYY-MM-DD\");\n}\nexport function dateToString(date, format = \"DD-MM-YYYY\") {\n  return moment(date).format(format);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/src/util/DateUtil.js"],"names":["getMonthString","moment","getYears","plusYears","result","currentYear","Date","getFullYear","i","push","name","value","getYearObject","year","leapYear","getDateRangeString","monthFrom","yearFrom","monthTo","undefined","yearTo","stringToDate","date","dateToString","format"],"mappings":"AAAA,SAASA,cAAT,QAA+B,oBAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,QAAT,CAAkBC,SAAS,GAAG,CAA9B,EAAiC;AACtC,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,EAAlB;AAEAF,EAAAA,WAAW,IAAIF,SAAf;;AAEA,OAAK,IAAIK,CAAC,GAAGH,WAAb,EAA0BG,CAAC,IAAIH,WAAW,GAAG,EAA7C,EAAiDG,CAAC,EAAlD,EAAsD;AACpDJ,IAAAA,MAAM,CAACK,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAEF,CADI;AAEVG,MAAAA,KAAK,EAAEH;AAFG,KAAZ;AAID;;AAED,SAAOJ,MAAP;AACD;AAED,OAAO,SAASQ,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAO;AACLH,IAAAA,IAAI,EAAEG,IADD;AAELF,IAAAA,KAAK,EAAEE;AAFF,GAAP;AAID;AAED,OAAO,SAASC,QAAT,CAAkBD,IAAlB,EAAwB;AAC7B,SAAQA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAAlC,IAAwCA,IAAI,GAAG,GAAP,KAAe,CAA9D;AACD;AAED,OAAO,SAASE,kBAAT,CACLC,SADK,EAELC,QAFK,EAGLC,OAAO,GAAGC,SAHL,EAILC,MAAM,GAAGD,SAJJ,EAKL;AACA,MAAIf,MAAM,GAAGJ,cAAc,CAACgB,SAAD,CAAd,GAA4B,GAA5B,GAAkCC,QAA/C;;AAEA,MAAIC,OAAO,IAAIE,MAAf,EAAuB;AACrBhB,IAAAA,MAAM,IAAI,QAAQJ,cAAc,CAACkB,OAAD,CAAtB,GAAkC,GAAlC,GAAwCE,MAAlD;AACD;;AAED,SAAOhB,MAAP;AACD;AAED,OAAO,SAASiB,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,SAAOrB,MAAM,CAACqB,IAAD,EAAO,YAAP,CAAb;AACD;AAED,OAAO,SAASC,YAAT,CAAsBD,IAAtB,EAA4BE,MAAM,GAAG,YAArC,EAAmD;AACxD,SAAOvB,MAAM,CAACqB,IAAD,CAAN,CAAaE,MAAb,CAAoBA,MAApB,CAAP;AACD","sourcesContent":["import { getMonthString } from \"../constants/Month\";\r\nimport moment from \"moment\";\r\n\r\nexport function getYears(plusYears = 0) {\r\n  let result = [];\r\n  let currentYear = new Date().getFullYear();\r\n\r\n  currentYear += plusYears;\r\n\r\n  for (let i = currentYear; i >= currentYear - 99; i--) {\r\n    result.push({\r\n      name: i,\r\n      value: i\r\n    });\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function getYearObject(year) {\r\n  return {\r\n    name: year,\r\n    value: year\r\n  };\r\n}\r\n\r\nexport function leapYear(year) {\r\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\r\n}\r\n\r\nexport function getDateRangeString(\r\n  monthFrom,\r\n  yearFrom,\r\n  monthTo = undefined,\r\n  yearTo = undefined\r\n) {\r\n  let result = getMonthString(monthFrom) + \" \" + yearFrom;\r\n\r\n  if (monthTo && yearTo) {\r\n    result += \" - \" + getMonthString(monthTo) + \" \" + yearTo;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function stringToDate(date) {\r\n  return moment(date, \"YYYY-MM-DD\");\r\n}\r\n\r\nexport function dateToString(date, format = \"DD-MM-YYYY\") {\r\n  return moment(date).format(format);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}