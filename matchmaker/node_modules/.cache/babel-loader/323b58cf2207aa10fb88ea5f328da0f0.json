{"ast":null,"code":"import strings from\"../localization\";import ValidatorTypes from\"../constants/ValidatorTypes\";import{isNumeric}from\"../util/DataValidation\";export function hasError(errors,type){return errors[type]&&errors[type].length>0;}export default function getErrorClass(errors,type){return hasError(errors,type)?\"error\":\"\";}export function validate(formData,validationList){var errors={};var _loop=function _loop(){var propertyKey=_Object$keys[_i];var fieldErrors=[];validationList[propertyKey].forEach(function(validationItem){if(validationItem.type===ValidatorTypes.REQUIRED){if(!required(formData[propertyKey])){fieldErrors.push({message:strings.validation.RequiredErrorMessage});}}else if(validationItem.type===ValidatorTypes.MIN_LENGTH){if(!minLength(formData[propertyKey],validationItem.min)){fieldErrors.push({message:\"\".concat(strings.validation.MinLengthErrorMessage).concat(validationItem.min)});}}else if(validationItem.type===ValidatorTypes.MAX_LENGTH){if(!maxLength(formData[propertyKey],validationItem.max)){fieldErrors.push({message:\"\".concat(strings.validation.MaxLengthErrorMessage).concat(validationItem.max)});}}else if(validationItem.type===ValidatorTypes.EMAIL){if(!email(formData[propertyKey])){fieldErrors.push({message:strings.validation.EmailErrorMessage});}}else if(validationItem.type===ValidatorTypes.PASSWORD){if(!password(formData[propertyKey])){fieldErrors.push({message:strings.validation.PasswordErrorMessage});}}else if(validationItem.type===ValidatorTypes.NOT_EMPTY_ARRAY){if(!notEmptyArray(formData[propertyKey])){fieldErrors.push({message:strings.validation.RequiredErrorMessage});}}else if(validationItem.type===ValidatorTypes.SELECTED_OPTION){if(!formData[propertyKey]||formData[propertyKey]===\"-1\"){fieldErrors.push({message:strings.validation.RequiredErrorMessage});}}else if(validationItem.type===ValidatorTypes.IS_NUMBER){if(!isNumeric(formData[propertyKey])){fieldErrors.push({message:strings.validation.notNumber});}}});errors[propertyKey]=fieldErrors;};for(var _i=0,_Object$keys=Object.keys(validationList);_i<_Object$keys.length;_i++){_loop();}return errors;}function notEmptyArray(data){return!(!data||data.length===0);}function required(data){return!(!data||data===\"\");}function minLength(data,minLength){return data&&data.length>=minLength;}function maxLength(data,maxLength){return data&&data.length<=maxLength;}function email(data){var regexp=/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return regexp.test(data);}function password(data){var regexp=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/;return regexp.test(data);}export function isFormValid(errors){for(var key in errors){var error=errors[key];if(error.length!==0){return false;}}return true;}","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/functions/Validation.js"],"names":["strings","ValidatorTypes","isNumeric","hasError","errors","type","length","getErrorClass","validate","formData","validationList","propertyKey","fieldErrors","forEach","validationItem","REQUIRED","required","push","message","validation","RequiredErrorMessage","MIN_LENGTH","minLength","min","MinLengthErrorMessage","MAX_LENGTH","maxLength","max","MaxLengthErrorMessage","EMAIL","email","EmailErrorMessage","PASSWORD","password","PasswordErrorMessage","NOT_EMPTY_ARRAY","notEmptyArray","SELECTED_OPTION","IS_NUMBER","notNumber","Object","keys","data","regexp","test","isFormValid","key","error"],"mappings":"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","sourcesContent":["import strings from \"../localization\";\nimport ValidatorTypes from \"../constants/ValidatorTypes\";\nimport { isNumeric } from \"../util/DataValidation\";\n\nexport function hasError(errors, type) {\n  return errors[type] && errors[type].length > 0;\n}\n\nexport default function getErrorClass(errors, type) {\n  return hasError(errors, type) ? \"error\" : \"\";\n}\n\nexport function validate(formData, validationList) {\n  let errors = {};\n\n  for (let propertyKey of Object.keys(validationList)) {\n    let fieldErrors = [];\n\n    validationList[propertyKey].forEach((validationItem) => {\n      if (validationItem.type === ValidatorTypes.REQUIRED) {\n        if (!required(formData[propertyKey])) {\n          fieldErrors.push({\n            message: strings.validation.RequiredErrorMessage,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.MIN_LENGTH) {\n        if (!minLength(formData[propertyKey], validationItem.min)) {\n          fieldErrors.push({\n            message: `${strings.validation.MinLengthErrorMessage}${validationItem.min}`,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.MAX_LENGTH) {\n        if (!maxLength(formData[propertyKey], validationItem.max)) {\n          fieldErrors.push({\n            message: `${strings.validation.MaxLengthErrorMessage}${validationItem.max}`,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.EMAIL) {\n        if (!email(formData[propertyKey])) {\n          fieldErrors.push({\n            message: strings.validation.EmailErrorMessage,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.PASSWORD) {\n        if (!password(formData[propertyKey])) {\n          fieldErrors.push({\n            message: strings.validation.PasswordErrorMessage,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.NOT_EMPTY_ARRAY) {\n        if (!notEmptyArray(formData[propertyKey])) {\n          fieldErrors.push({\n            message: strings.validation.RequiredErrorMessage,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.SELECTED_OPTION) {\n        if (!formData[propertyKey] || formData[propertyKey] === \"-1\") {\n          fieldErrors.push({\n            message: strings.validation.RequiredErrorMessage,\n          });\n        }\n      } else if (validationItem.type === ValidatorTypes.IS_NUMBER) {\n        if (!isNumeric(formData[propertyKey])) {\n          fieldErrors.push({\n            message: strings.validation.notNumber,\n          });\n        }\n      }\n    });\n\n    errors[propertyKey] = fieldErrors;\n  }\n\n  return errors;\n}\n\nfunction notEmptyArray(data) {\n  return !(!data || data.length === 0);\n}\n\nfunction required(data) {\n  return !(!data || data === \"\");\n}\n\nfunction minLength(data, minLength) {\n  return data && data.length >= minLength;\n}\n\nfunction maxLength(data, maxLength) {\n  return data && data.length <= maxLength;\n}\n\nfunction email(data) {\n  let regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regexp.test(data);\n}\n\nfunction password(data) {\n  let regexp = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/;\n  return regexp.test(data);\n}\n\nexport function isFormValid(errors) {\n  for (let key in errors) {\n    let error = errors[key];\n    if (error.length !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}