{"ast":null,"code":"var _jsxFileName = \"/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/base/AuthWrapper.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { checkPath } from \"../route\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass AuthWrapper extends Component {\n  checkPermission() {\n    let needAuth = checkPath(this.props.location.pathname);\n\n    if (needAuth && !this.props.user) {\n      this.props.history.push({\n        pathname: \"/login\",\n        state: {\n          redirectUrl: this.props.location.pathname\n        }\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    if (!this.checkPermission()) {\n      return \"\";\n    }\n\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, children);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nfunction mapStateToProps({\n  authReducers\n}) {\n  return {\n    user: authReducers.user\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthWrapper));","map":{"version":3,"sources":["/home/korisnik/Desktop/Borkovac/MyProjects/Matchmaker/Matchmaker/matchmaker/src/base/AuthWrapper.js"],"names":["React","Component","withRouter","checkPath","connect","bindActionCreators","AuthWrapper","checkPermission","needAuth","props","location","pathname","user","history","push","state","redirectUrl","render","children","mapDispatchToProps","dispatch","mapStateToProps","authReducers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,eAAe,GAAG;AAChB,QAAIC,QAAQ,GAAGL,SAAS,CAAC,KAAKM,KAAL,CAAWC,QAAX,CAAoBC,QAArB,CAAxB;;AAEA,QAAIH,QAAQ,IAAI,CAAC,KAAKC,KAAL,CAAWG,IAA5B,EAAkC;AAChC,WAAKH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB;AACtBH,QAAAA,QAAQ,EAAE,QADY;AAEtBI,QAAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,QAAX,CAAoBC;AAAnC;AAFe,OAAxB;AAKA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKV,eAAL,EAAL,EAA6B;AAC3B,aAAO,EAAP;AACD;;AAED,UAAM;AAAEW,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AAEA,wBAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBS,QAAjB,CAAP;AACD;;AAxBiC;;AA2BpC,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOf,kBAAkB,CAAC,EAAD,EAAKe,QAAL,CAAzB;AACD;;AAED,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAA2C;AACzC,SAAO;AACLV,IAAAA,IAAI,EAAEU,YAAY,CAACV;AADd,GAAP;AAGD;;AAED,eAAeV,UAAU,CACvBE,OAAO,CAACiB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cb,WAA7C,CADuB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { checkPath } from \"../route\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass AuthWrapper extends Component {\n  checkPermission() {\n    let needAuth = checkPath(this.props.location.pathname);\n\n    if (needAuth && !this.props.user) {\n      this.props.history.push({\n        pathname: \"/login\",\n        state: { redirectUrl: this.props.location.pathname },\n      });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    if (!this.checkPermission()) {\n      return \"\";\n    }\n\n    const { children } = this.props;\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nfunction mapStateToProps({ authReducers }) {\n  return {\n    user: authReducers.user,\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AuthWrapper)\n);\n"]},"metadata":{},"sourceType":"module"}