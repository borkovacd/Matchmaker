{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Lilly021\\\\GIT\\\\Matchmaker\\\\matchmaker\\\\src\\\\components\\\\ErrorViewer.js\";\nimport React, { Component } from \"react\";\n\nclass ErrorViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: props.errors,\n      type: props.type\n    };\n  }\n\n  getErrors() {\n    let result = [];\n    let errors = this.props.errors[this.props.type];\n\n    for (let i = 0; i < errors.length; i++) {\n      result.push( /*#__PURE__*/React.createElement(\"li\", {\n        key: \"error- \" + this.props.type + \"-\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, errors[i].message));\n    }\n\n    return result;\n  }\n\n  render() {\n    return this.props.errors[this.props.type] ? this.props.errors[this.props.type].map(error => {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"error-container\",\n        key: \"error- container-\" + this.props.type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, this.getErrors());\n    }) : \"\";\n  }\n\n}\n\nexport default ErrorViewer;","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/src/components/ErrorViewer.js"],"names":["React","Component","ErrorViewer","constructor","props","state","errors","type","getErrors","result","i","length","push","message","render","map","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AAClCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEF,KAAK,CAACE,MADH;AAEXC,MAAAA,IAAI,EAAEH,KAAK,CAACG;AAFD,KAAb;AAID;;AAEDC,EAAAA,SAAS,GAAG;AACV,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIH,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,CAAb;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCD,MAAAA,MAAM,CAACG,IAAP,eACE;AAAI,QAAA,GAAG,EAAE,YAAY,KAAKR,KAAL,CAAWG,IAAvB,GAA8B,GAA9B,GAAoCG,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDJ,MAAM,CAACI,CAAD,CAAN,CAAUG,OAA3D,CADF;AAGD;;AAED,WAAOJ,MAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKV,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,IACH,KAAKH,KAAL,CAAWE,MAAX,CAAkB,KAAKF,KAAL,CAAWG,IAA7B,EAAmCQ,GAAnC,CAAuCC,KAAK,IAAI;AAC9C,0BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,GAAG,EAAE,sBAAsB,KAAKZ,KAAL,CAAWG,IAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKC,SAAL,EAJH,CADF;AAQD,KATD,CADG,GAWH,EAXJ;AAYD;;AAnCiC;;AAsCpC,eAAeN,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ErrorViewer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: props.errors,\r\n      type: props.type\r\n    };\r\n  }\r\n\r\n  getErrors() {\r\n    let result = [];\r\n    let errors = this.props.errors[this.props.type];\r\n\r\n    for (let i = 0; i < errors.length; i++) {\r\n      result.push(\r\n        <li key={\"error- \" + this.props.type + \"-\" + i}>{errors[i].message}</li>\r\n      );\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    return this.props.errors[this.props.type]\r\n      ? this.props.errors[this.props.type].map(error => {\r\n          return (\r\n            <ul\r\n              className=\"error-container\"\r\n              key={\"error- container-\" + this.props.type}\r\n            >\r\n              {this.getErrors()}\r\n            </ul>\r\n          );\r\n        })\r\n      : \"\";\r\n  }\r\n}\r\n\r\nexport default ErrorViewer;\r\n"]},"metadata":{},"sourceType":"module"}