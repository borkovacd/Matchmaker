{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\r\n * Simple module to localize the React interface using the same syntax\r\n * used in the ReactNativeLocalization module\r\n * (https://github.com/stefalda/ReactNativeLocalization)\r\n *\r\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\r\n *\r\n * It uses a call to the Navigator/Browser object to get the current interface language,\r\n * then display the correct language strings or the default language (the first\r\n * one if a match is not found).\r\n *\r\n * How to use:\r\n * Check the instructions at:\r\n * https://github.com/stefalda/react-localization\r\n */\n\n\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\nvar isReactComponent = function isReactComponent(value) {\n  return _typeof(value.$$typeof) === 'symbol';\n};\n\nvar LocalizedStrings = function () {\n  _createClass(LocalizedStrings, [{\n    key: '_getBestMatchingLanguage',\n    value: function _getBestMatchingLanguage(language, props) {\n      //If an object with the passed language key exists return it\n      if (props[language]) return language; //if the string is composed try to find a match with only the first language identifiers (en-US --> en)\n\n      var idx = language.indexOf('-');\n      var auxLang = idx >= 0 ? language.substring(0, idx) : language;\n      return props[auxLang] ? auxLang : Object.keys(props)[0];\n    }\n  }]);\n\n  function LocalizedStrings(props) {\n    _classCallCheck(this, LocalizedStrings);\n\n    this._interfaceLanguage = utils.getInterfaceLanguage();\n    this._language = this._interfaceLanguage;\n    this.setContent(props);\n  }\n\n  _createClass(LocalizedStrings, [{\n    key: 'setContent',\n    value: function setContent(props) {\n      this._defaultLanguage = Object.keys(props)[0];\n      this._defaultLanguageFirstLevelKeys = []; //Store locally the passed strings\n\n      this._props = props;\n      utils.validateTranslationKeys(Object.keys(props[this._defaultLanguage])); //Store first level keys (for identifying missing translations)\n\n      for (var key in this._props[this._defaultLanguage]) {\n        if (typeof this._props[this._defaultLanguage][key] == \"string\") {\n          this._defaultLanguageFirstLevelKeys.push(key);\n        }\n      } //Set language to its default value (the interface)\n\n\n      this.setLanguage(this._interfaceLanguage);\n    } //Can be used from ouside the class to force a particular language\n    //indipendently from the interface one\n\n  }, {\n    key: 'setLanguage',\n    value: function setLanguage(language) {\n      //Check if exists a translation for the current language or if the default\n      //should be used\n      var bestLanguage = this._getBestMatchingLanguage(language, this._props);\n\n      var defaultLanguage = Object.keys(this._props)[0];\n      this._language = bestLanguage; //Associate the language object to the this object\n\n      if (this._props[bestLanguage]) {\n        //delete default propery values to identify missing translations\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this._defaultLanguageFirstLevelKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            key = _step.value;\n            delete this[key];\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var localizedStrings = Object.assign({}, this._props[this._language]);\n\n        for (var key in localizedStrings) {\n          if (localizedStrings.hasOwnProperty(key)) {\n            this[key] = localizedStrings[key];\n          }\n        } //Now add any string missing from the translation but existing in the default language\n\n\n        if (defaultLanguage !== this._language) {\n          localizedStrings = this._props[defaultLanguage];\n\n          this._fallbackValues(localizedStrings, this);\n        }\n      }\n    } //Load fallback values for missing translations\n\n  }, {\n    key: '_fallbackValues',\n    value: function _fallbackValues(defaultStrings, strings) {\n      for (var key in defaultStrings) {\n        if (defaultStrings.hasOwnProperty(key) && !strings[key]) {\n          strings[key] = defaultStrings[key];\n          console.log('\\uD83D\\uDEA7 \\uD83D\\uDC77 key \\'' + key + '\\' not found in localizedStrings for language ' + this._language + ' \\uD83D\\uDEA7');\n        } else {\n          if (typeof strings[key] != \"string\") {\n            //It's an object\n            this._fallbackValues(defaultStrings[key], strings[key]);\n          }\n        }\n      }\n    } //The current language displayed (could differ from the interface language\n    // if it has been forced manually and a matching translation has been found)\n\n  }, {\n    key: 'getLanguage',\n    value: function getLanguage() {\n      return this._language;\n    } //The current interface language (could differ from the language displayed)\n\n  }, {\n    key: 'getInterfaceLanguage',\n    value: function getInterfaceLanguage() {\n      return this._interfaceLanguage;\n    } //Return an array containing the available languages passed as props in the constructor\n\n  }, {\n    key: 'getAvailableLanguages',\n    value: function getAvailableLanguages() {\n      if (!this._availableLanguages) {\n        this._availableLanguages = [];\n\n        for (var language in this._props) {\n          this._availableLanguages.push(language);\n        }\n      }\n\n      return this._availableLanguages;\n    } //Format the passed string replacing the numbered or tokenized placeholders\n    //eg. 1: I'd like some {0} and {1}, or just {0}\n    //eg. 2: I'd like some {bread} and {butter}, or just {bread}\n    //Use example:\n    //eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n    //eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter })\n\n  }, {\n    key: 'formatString',\n    value: function formatString(str) {\n      for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        valuesForPlaceholders[_key - 1] = arguments[_key];\n      }\n\n      return str.split(placeholderRegex).filter(function (textPart) {\n        return !!textPart;\n      }).map(function (textPart, index) {\n        if (textPart.match(placeholderRegex)) {\n          var matchedKey = textPart.slice(1, -1);\n          var valueForPlaceholder = valuesForPlaceholders[matchedKey]; // If no value found, check if working with an object instead\n\n          if (valueForPlaceholder == undefined) {\n            var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n\n            if (valueFromObjectPlaceholder !== undefined) {\n              valueForPlaceholder = valueFromObjectPlaceholder;\n            } else {\n              // If value still isn't found, then it must have been undefined/null\n              return valueForPlaceholder;\n            }\n          }\n\n          if (isReactComponent(valueForPlaceholder)) {\n            return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n              return _extends({}, component, {\n                key: index.toString()\n              });\n            });\n          }\n\n          return valueForPlaceholder;\n        }\n\n        return textPart;\n      });\n    } //Return a string with the passed key in a different language\n\n  }, {\n    key: 'getString',\n    value: function getString(key, language) {\n      try {\n        return this._props[language][key];\n      } catch (ex) {\n        console.log(\"No localization found for key \" + key + \" and language \" + language);\n      }\n\n      return null;\n    }\n  }]);\n\n  return LocalizedStrings;\n}();\n\nexports.default = LocalizedStrings;","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/node_modules/react-localization/lib/LocalizedStrings.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_typeof","Symbol","iterator","obj","constructor","_react","require","_react2","_interopRequireDefault","_utils","utils","_interopRequireWildcard","__esModule","newObj","default","_classCallCheck","instance","TypeError","placeholderRegex","isReactComponent","$$typeof","LocalizedStrings","_getBestMatchingLanguage","language","idx","indexOf","auxLang","substring","keys","_interfaceLanguage","getInterfaceLanguage","_language","setContent","_defaultLanguage","_defaultLanguageFirstLevelKeys","_props","validateTranslationKeys","push","setLanguage","bestLanguage","defaultLanguage","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","_step","next","done","err","return","localizedStrings","_fallbackValues","defaultStrings","strings","console","log","getLanguage","getAvailableLanguages","_availableLanguages","formatString","str","_len","valuesForPlaceholders","Array","_key","split","filter","textPart","map","index","match","matchedKey","slice","valueForPlaceholder","valueFromObjectPlaceholder","Children","toArray","component","toString","getString","ex"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\n\r\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\r\n\r\nvar _react = require('react');\r\n\r\nvar _react2 = _interopRequireDefault(_react);\r\n\r\nvar _utils = require('./utils');\r\n\r\nvar utils = _interopRequireWildcard(_utils);\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n\r\n/**\r\n * Simple module to localize the React interface using the same syntax\r\n * used in the ReactNativeLocalization module\r\n * (https://github.com/stefalda/ReactNativeLocalization)\r\n *\r\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\r\n *\r\n * It uses a call to the Navigator/Browser object to get the current interface language,\r\n * then display the correct language strings or the default language (the first\r\n * one if a match is not found).\r\n *\r\n * How to use:\r\n * Check the instructions at:\r\n * https://github.com/stefalda/react-localization\r\n */\r\n\r\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\r\nvar isReactComponent = function isReactComponent(value) {\r\n    return _typeof(value.$$typeof) === 'symbol';\r\n};\r\n\r\nvar LocalizedStrings = function () {\r\n    _createClass(LocalizedStrings, [{\r\n        key: '_getBestMatchingLanguage',\r\n        value: function _getBestMatchingLanguage(language, props) {\r\n            //If an object with the passed language key exists return it\r\n            if (props[language]) return language;\r\n\r\n            //if the string is composed try to find a match with only the first language identifiers (en-US --> en)\r\n            var idx = language.indexOf('-');\r\n            var auxLang = idx >= 0 ? language.substring(0, idx) : language;\r\n            return props[auxLang] ? auxLang : Object.keys(props)[0];\r\n        }\r\n    }]);\r\n\r\n    function LocalizedStrings(props) {\r\n        _classCallCheck(this, LocalizedStrings);\r\n\r\n        this._interfaceLanguage = utils.getInterfaceLanguage();\r\n        this._language = this._interfaceLanguage;\r\n        this.setContent(props);\r\n    }\r\n\r\n    _createClass(LocalizedStrings, [{\r\n        key: 'setContent',\r\n        value: function setContent(props) {\r\n            this._defaultLanguage = Object.keys(props)[0];\r\n            this._defaultLanguageFirstLevelKeys = [];\r\n            //Store locally the passed strings\r\n            this._props = props;\r\n            utils.validateTranslationKeys(Object.keys(props[this._defaultLanguage]));\r\n            //Store first level keys (for identifying missing translations)\r\n            for (var key in this._props[this._defaultLanguage]) {\r\n                if (typeof this._props[this._defaultLanguage][key] == \"string\") {\r\n                    this._defaultLanguageFirstLevelKeys.push(key);\r\n                }\r\n            }\r\n            //Set language to its default value (the interface)\r\n            this.setLanguage(this._interfaceLanguage);\r\n        }\r\n\r\n        //Can be used from ouside the class to force a particular language\r\n        //indipendently from the interface one\r\n\r\n    }, {\r\n        key: 'setLanguage',\r\n        value: function setLanguage(language) {\r\n            //Check if exists a translation for the current language or if the default\r\n            //should be used\r\n            var bestLanguage = this._getBestMatchingLanguage(language, this._props);\r\n            var defaultLanguage = Object.keys(this._props)[0];\r\n            this._language = bestLanguage;\r\n            //Associate the language object to the this object\r\n            if (this._props[bestLanguage]) {\r\n                //delete default propery values to identify missing translations\r\n                var _iteratorNormalCompletion = true;\r\n                var _didIteratorError = false;\r\n                var _iteratorError = undefined;\r\n\r\n                try {\r\n                    for (var _iterator = this._defaultLanguageFirstLevelKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\r\n                        key = _step.value;\r\n\r\n                        delete this[key];\r\n                    }\r\n                } catch (err) {\r\n                    _didIteratorError = true;\r\n                    _iteratorError = err;\r\n                } finally {\r\n                    try {\r\n                        if (!_iteratorNormalCompletion && _iterator.return) {\r\n                            _iterator.return();\r\n                        }\r\n                    } finally {\r\n                        if (_didIteratorError) {\r\n                            throw _iteratorError;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                var localizedStrings = Object.assign({}, this._props[this._language]);\r\n                for (var key in localizedStrings) {\r\n                    if (localizedStrings.hasOwnProperty(key)) {\r\n                        this[key] = localizedStrings[key];\r\n                    }\r\n                }\r\n                //Now add any string missing from the translation but existing in the default language\r\n                if (defaultLanguage !== this._language) {\r\n                    localizedStrings = this._props[defaultLanguage];\r\n                    this._fallbackValues(localizedStrings, this);\r\n                }\r\n            }\r\n        }\r\n\r\n        //Load fallback values for missing translations\r\n\r\n    }, {\r\n        key: '_fallbackValues',\r\n        value: function _fallbackValues(defaultStrings, strings) {\r\n            for (var key in defaultStrings) {\r\n                if (defaultStrings.hasOwnProperty(key) && !strings[key]) {\r\n                    strings[key] = defaultStrings[key];\r\n                    console.log('\\uD83D\\uDEA7 \\uD83D\\uDC77 key \\'' + key + '\\' not found in localizedStrings for language ' + this._language + ' \\uD83D\\uDEA7');\r\n                } else {\r\n                    if (typeof strings[key] != \"string\") {\r\n                        //It's an object\r\n                        this._fallbackValues(defaultStrings[key], strings[key]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //The current language displayed (could differ from the interface language\r\n        // if it has been forced manually and a matching translation has been found)\r\n\r\n    }, {\r\n        key: 'getLanguage',\r\n        value: function getLanguage() {\r\n            return this._language;\r\n        }\r\n\r\n        //The current interface language (could differ from the language displayed)\r\n\r\n    }, {\r\n        key: 'getInterfaceLanguage',\r\n        value: function getInterfaceLanguage() {\r\n            return this._interfaceLanguage;\r\n        }\r\n\r\n        //Return an array containing the available languages passed as props in the constructor\r\n\r\n    }, {\r\n        key: 'getAvailableLanguages',\r\n        value: function getAvailableLanguages() {\r\n            if (!this._availableLanguages) {\r\n                this._availableLanguages = [];\r\n                for (var language in this._props) {\r\n                    this._availableLanguages.push(language);\r\n                }\r\n            }\r\n            return this._availableLanguages;\r\n        }\r\n\r\n        //Format the passed string replacing the numbered or tokenized placeholders\r\n        //eg. 1: I'd like some {0} and {1}, or just {0}\r\n        //eg. 2: I'd like some {bread} and {butter}, or just {bread}\r\n        //Use example:\r\n        //eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\r\n        //eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter })\r\n\r\n    }, {\r\n        key: 'formatString',\r\n        value: function formatString(str) {\r\n            for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n                valuesForPlaceholders[_key - 1] = arguments[_key];\r\n            }\r\n\r\n            return str.split(placeholderRegex).filter(function (textPart) {\r\n                return !!textPart;\r\n            }).map(function (textPart, index) {\r\n                if (textPart.match(placeholderRegex)) {\r\n                    var matchedKey = textPart.slice(1, -1);\r\n                    var valueForPlaceholder = valuesForPlaceholders[matchedKey];\r\n\r\n                    // If no value found, check if working with an object instead\r\n                    if (valueForPlaceholder == undefined) {\r\n                        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\r\n                        if (valueFromObjectPlaceholder !== undefined) {\r\n                            valueForPlaceholder = valueFromObjectPlaceholder;\r\n                        } else {\r\n                            // If value still isn't found, then it must have been undefined/null\r\n                            return valueForPlaceholder;\r\n                        }\r\n                    }\r\n\r\n                    if (isReactComponent(valueForPlaceholder)) {\r\n                        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\r\n                            return _extends({}, component, { key: index.toString() });\r\n                        });\r\n                    }\r\n\r\n                    return valueForPlaceholder;\r\n                }\r\n                return textPart;\r\n            });\r\n        }\r\n\r\n        //Return a string with the passed key in a different language\r\n\r\n    }, {\r\n        key: 'getString',\r\n        value: function getString(key, language) {\r\n            try {\r\n                return this._props[language][key];\r\n            } catch (ex) {\r\n                console.log(\"No localization found for key \" + key + \" and language \" + language);\r\n            }\r\n            return null;\r\n        }\r\n    }]);\r\n\r\n    return LocalizedStrings;\r\n}();\r\n\r\nexports.default = LocalizedStrings;"]},"metadata":{},"sourceType":"script"}