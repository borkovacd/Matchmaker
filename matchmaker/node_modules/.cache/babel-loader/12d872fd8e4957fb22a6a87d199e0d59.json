{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Lilly021\\\\GIT\\\\Matchmaker\\\\matchmaker\\\\src\\\\base\\\\AuthWrapper.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { checkPath } from '../route';\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nclass AuthWrapper extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  checkPermission() {\n    let needAuth = checkPath(this.props.location.pathname);\n\n    if (needAuth && !this.props.user) {\n      this.props.history.push({\n        pathname: '/login',\n        state: {\n          redirectUrl: this.props.location.pathname\n        }\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    if (!this.checkPermission()) {\n      return '';\n    }\n\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, children);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nfunction mapStateToProps({\n  authReducers\n}) {\n  return {\n    user: authReducers.user\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthWrapper));","map":{"version":3,"sources":["C:/Users/User/Desktop/Lilly021/GIT/Matchmaker/matchmaker/src/base/AuthWrapper.js"],"names":["React","Component","withRouter","checkPath","connect","bindActionCreators","AuthWrapper","constructor","props","checkPermission","needAuth","location","pathname","user","history","push","state","redirectUrl","render","children","mapDispatchToProps","dispatch","mapStateToProps","authReducers"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,eAAe,GAAG;AAEd,QAAIC,QAAQ,GAAGP,SAAS,CAAC,KAAKK,KAAL,CAAWG,QAAX,CAAoBC,QAArB,CAAxB;;AAEA,QAAGF,QAAQ,IAAI,CAAC,KAAKF,KAAL,CAAWK,IAA3B,EAAiC;AAE7B,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB;AACpBH,QAAAA,QAAQ,EAAE,QADU;AAEpBI,QAAAA,KAAK,EAAK;AAAEC,UAAAA,WAAW,EAAE,KAAKT,KAAL,CAAWG,QAAX,CAAoBC;AAAnC;AAFU,OAAxB;AAKA,aAAO,KAAP;AACH;;AAED,WAAO,IAAP;AACH;;AAEDM,EAAAA,MAAM,GAAG;AAEL,QAAG,CAAC,KAAKT,eAAL,EAAJ,EAA4B;AACxB,aAAO,EAAP;AACH;;AAED,UAAM;AAACU,MAAAA;AAAD,QAAa,KAAKX,KAAxB;AAEA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMW,QADN,CADJ;AAKH;;AApC+B;;AAuCpC,SAASC,kBAAT,CAA4BC,QAA5B,EACA;AACI,SAAOhB,kBAAkB,CAAC,EAAD,EAAKgB,QAAL,CAAzB;AACH;;AAED,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EACA;AACI,SAAO;AACHV,IAAAA,IAAI,EAAEU,YAAY,CAACV;AADhB,GAAP;AAGH;;AAED,eAAeX,UAAU,CAACE,OAAO,CAACkB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cd,WAA7C,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport { checkPath } from '../route';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass AuthWrapper extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    checkPermission() {\r\n\r\n        let needAuth = checkPath(this.props.location.pathname);\r\n\r\n        if(needAuth && !this.props.user) {\r\n\r\n            this.props.history.push({\r\n                pathname: '/login',\r\n                state   : { redirectUrl: this.props.location.pathname }\r\n            });\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n\r\n        if(!this.checkPermission()) {\r\n            return '';\r\n        }\r\n\r\n        const {children} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                { children }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch)\r\n{\r\n    return bindActionCreators({}, dispatch);\r\n}\r\n\r\nfunction mapStateToProps({ authReducers })\r\n{\r\n    return {\r\n        user: authReducers.user,\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AuthWrapper));\r\n"]},"metadata":{},"sourceType":"module"}